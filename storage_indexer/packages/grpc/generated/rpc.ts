/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: rpc.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./events";
import * as grpc_1 from "@grpc/grpc-js";
interface GrpcUnaryServiceInterface<P, R> {
    (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
}
interface GrpcStreamServiceInterface<P, R> {
    (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
}
interface GrpWritableServiceInterface<P, R> {
    (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
}
interface GrpcChunkServiceInterface<P, R> {
    (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
}
interface GrpcPromiseServiceInterface<P, R> {
    (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
    (message: P, options?: grpc_1.CallOptions): Promise<R>;
}
export abstract class UnimplementedNineServiceService {
    static definition = {
        GetNineEvent: {
            path: "/NineService/GetNineEvent",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message: dependency_1.events.EventRequest) => Buffer.from(message.serialize()),
            requestDeserialize: (bytes: Buffer) => dependency_1.events.EventRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message: dependency_1.events.Event) => Buffer.from(message.serialize()),
            responseDeserialize: (bytes: Buffer) => dependency_1.events.Event.deserialize(new Uint8Array(bytes))
        },
        GetNineEvents: {
            path: "/NineService/GetNineEvents",
            requestStream: false,
            responseStream: true,
            requestSerialize: (message: dependency_1.events.EventsRequest) => Buffer.from(message.serialize()),
            requestDeserialize: (bytes: Buffer) => dependency_1.events.EventsRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message: dependency_1.events.Event) => Buffer.from(message.serialize()),
            responseDeserialize: (bytes: Buffer) => dependency_1.events.Event.deserialize(new Uint8Array(bytes))
        }
    };
    [method: string]: grpc_1.UntypedHandleCall;
    abstract GetNineEvent(call: grpc_1.ServerUnaryCall<dependency_1.events.EventRequest, dependency_1.events.Event>, callback: grpc_1.sendUnaryData<dependency_1.events.Event>): void;
    abstract GetNineEvents(call: grpc_1.ServerWritableStream<dependency_1.events.EventsRequest, dependency_1.events.Event>): void;
}
export class NineServiceClient extends grpc_1.makeGenericClientConstructor(UnimplementedNineServiceService.definition, "NineService", {}) {
    constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
        super(address, credentials, options);
    }
    GetNineEvent: GrpcUnaryServiceInterface<dependency_1.events.EventRequest, dependency_1.events.Event> = (message: dependency_1.events.EventRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.events.Event>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.events.Event>, callback?: grpc_1.requestCallback<dependency_1.events.Event>): grpc_1.ClientUnaryCall => {
        return super.GetNineEvent(message, metadata, options, callback);
    };
    GetNineEvents: GrpcStreamServiceInterface<dependency_1.events.EventsRequest, dependency_1.events.Event> = (message: dependency_1.events.EventsRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<dependency_1.events.Event> => {
        return super.GetNineEvents(message, metadata, options);
    };
}
